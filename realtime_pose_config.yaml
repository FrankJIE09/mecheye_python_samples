# ================================================================================
# 实时点云姿态估计与STL模型可视化程序 - 详细配置文件
# 
# 此配置文件控制程序的所有行为，包括：
# - 相机设置和数据捕获
# - 点云预处理参数
# - 姿态估计算法参数
# - 可视化显示选项
# - 数据保存设置
# ================================================================================

# ================================================================================
# 模型文件设置
# ================================================================================
model_file: "stp/part2_rude.STL"
# 目标STL模型文件的路径
# 作用：程序将此STL模型与实时点云进行姿态匹配
# 支持格式：STL, OBJ, PLY等Open3D支持的网格文件格式
# 注意：确保文件路径正确，模型应与实际被检测物体匹配

# ================================================================================
# 相机连接和数据捕获设置
# ================================================================================
camera:
  connection_timeout: 10.0    # 相机连接超时时间（秒）
  # 作用：程序尝试连接相机的最长等待时间
  # 推荐值：5-15秒，网络相机可适当增加
  
  capture_retry_count: 3      # 点云捕获重试次数
  # 作用：当单次数据捕获失败时，程序的最大重试次数
  # 推荐值：3-5次，过多会影响实时性
  
  capture_timeout: 5.0        # 单次捕获超时时间（秒）
  # 作用：每次点云捕获操作的最长等待时间
  # 推荐值：3-8秒，取决于相机性能和数据量

# ================================================================================
# 点云预处理参数
# 影响：数据质量、处理速度、匹配精度
# ================================================================================
processing:
  model_sample_points: 20480  # 从STL模型采样的点数
  # 作用：将STL网格转换为点云时的采样密度
  # 影响：更多点数=更高精度但更慢处理，更少点数=更快但精度降低
  # 推荐值：10000-50000，根据模型复杂度调整
  
  preprocess_voxel_size: 0.002  # 体素下采样尺寸（米）
  # 作用：通过体素网格对点云进行下采样，减少点数
  # 影响：更小值=保留更多细节但处理更慢，更大值=更快但丢失细节
  # 推荐值：0.001-0.005米，根据物体尺寸调整
  # 设为0可禁用体素下采样
  
  preprocess_sor_k: 20  # 统计离群点移除的邻居数量
  # 作用：移除噪声点，每个点检查其k个最近邻居
  # 影响：更大值=更保守的离群点移除，更小值=更激进的噪声移除
  # 推荐值：10-50，噪声多的环境使用较大值
  # 设为0可禁用离群点移除
  
  preprocess_sor_std_ratio: 2.0  # 统计离群点移除的标准差倍数
  # 作用：距离大于(平均距离 + std_ratio*标准差)的点被视为离群点
  # 影响：更大值=更保守，更小值=更激进移除噪声
  # 推荐值：1.0-3.0
  
  preprocess_fps_n_points: 2048  # 最远点采样的目标点数
  # 作用：使用最远点采样算法将点云减少到指定数量
  # 影响：保持点云几何分布的同时减少计算量
  # 推荐值：1000-5000，根据需要的精度和速度平衡
  # 设为0可禁用最远点采样

# ================================================================================
# 粗配准算法参数
# 作用：为ICP提供初始变换估计，影响配准成功率和速度
# ================================================================================
coarse_alignment:
  iterations: 200             # 粗配准迭代次数
  # 作用：PyTorch优化器的最大迭代次数
  # 影响：更多迭代=更可能找到好的初始对齐，但耗时更长
  # 推荐值：100-500
  
  learning_rate: 0.01         # 粗配准学习率
  # 作用：PyTorch Adam优化器的学习率
  # 影响：过大可能导致不稳定，过小收敛太慢
  # 推荐值：0.001-0.1
  
  scene_points: 2048          # 粗配准中使用的场景点数
  # 作用：从预处理后的场景点云中采样用于粗配准的点数
  # 影响：更多点=更准确但更慢，更少点=更快但可能不准确
  # 推荐值：1024-2048（参考配置使用2048）
  
  model_points: 2048          # 粗配准中使用的模型点数
  # 作用：从目标模型点云中采样用于粗配准的点数
  # 影响：与scene_points类似，建议保持相近数量
  # 推荐值：1024-2048（参考配置使用2048）
  
  print_every: 20             # 打印损失的间隔（迭代次数）
  # 作用：控制粗配准过程中损失值的打印频率
  # 影响：更小值=更频繁打印，更大值=更少输出
  # 推荐值：10-50

# ================================================================================
# ICP精配准算法参数
# 作用：基于粗配准结果进行精确的姿态估计
# ================================================================================
icp:
  threshold: 30.0             # ICP距离阈值（参考配置使用30.0）
  # 作用：两点之间的最大距离，超过此距离的点对不参与ICP计算
  # 影响：更大值=包含更多点对但可能引入误匹配，更小值=更严格但可能点对太少
  # 推荐值：参考配置在原始尺度使用更大阈值30.0
  
  max_iterations: 5000        # ICP最大迭代次数（参考配置使用5000）
  # 作用：ICP算法的最大迭代次数
  # 影响：更多迭代=更可能收敛到最优解，但耗时更长
  # 推荐值：参考配置使用5000次迭代
  
  relative_rmse: 0.00001      # RMSE相对变化收敛阈值（参考配置1e-5）
  # 作用：当RMSE变化小于此值时认为收敛
  # 影响：更小值=更严格的收敛条件，更精确但可能耗时更长
  # 推荐值：参考配置使用1e-5
  
  relative_fitness: 0.00001   # 适应度相对变化收敛阈值（参考配置1e-5）
  # 作用：当适应度(匹配点比例)变化小于此值时认为收敛
  # 影响：更小值=更严格的收敛条件
  # 推荐值：参考配置使用1e-5
  
  transform_change_threshold: 0.001  # 变换矩阵变化收敛阈值（参考配置0.001）
  # 作用：当变换矩阵变化小于此值时认为收敛
  # 影响：更小值=更精确的收敛，但可能需要更多迭代
  # 推荐值：参考配置使用0.001
  
  min_points: 100             # 预处理后ICP的最小实例点数
  # 作用：进行ICP前要求的最小点数，低于此数量跳过ICP
  # 影响：保证ICP有足够的数据进行可靠估计
  # 推荐值：参考配置使用100

# ================================================================================
# 实时处理控制参数
# 作用：平衡处理精度和实时性能
# ================================================================================
realtime:
  pose_estimation_interval: 2.0  # 姿态估计间隔（秒）
  # 作用：每隔多长时间执行一次完整的姿态估计
  # 影响：更短间隔=更实时的结果但CPU占用更高，更长间隔=更省资源但更新较慢
  # 推荐值：1-5秒，根据应用需求调整
  
  frame_rate_delay: 0.05      # 帧率控制延迟（秒）
  # 作用：每帧处理后的等待时间，控制整体帧率
  # 影响：更短延迟=更流畅的可视化但CPU占用更高
  # 推荐值：0.01-0.1秒（对应100-10FPS）

# ================================================================================
# 3D可视化显示设置
# 作用：控制Open3D窗口的显示内容和外观
# ================================================================================
visualization:
  # 窗口基本设置
  window_width: 1280          # 3D可视化窗口宽度（像素）
  window_height: 960          # 3D可视化窗口高度（像素）
  point_size: 2.0             # 点云显示大小
  show_coordinate_frame: true # 是否显示坐标系
  background_color: [0.1, 0.1, 0.1]  # 背景颜色 [R, G, B] (0-1范围)
  
  # ============================================================================
  # 显示内容控制 - 可独立开关每种可视化元素
  # ============================================================================
  display:
    show_original_scene: true        # 显示原始场景点云
    # 作用：显示从相机直接获取的原始点云数据
    # 建议：通常开启，用于查看原始数据质量
    
    show_preprocessed_scene: true    # 显示预处理后的场景点云
    # 作用：显示经过滤波、下采样等预处理的点云
    # 建议：开启以查看预处理效果，与原始点云对比
    
    show_target_model: true          # 显示目标STL模型
    # 作用：在原始位置显示目标模型，用作参考
    # 建议：通常开启，便于理解匹配目标
    
    show_matched_model: true         # 显示姿态匹配后的模型
    # 作用：显示经过姿态估计后变换的模型位置
    # 建议：必须开启，这是主要的匹配结果
    
    show_model_pointcloud: true      # 显示模型采样点云
    # 作用：显示从STL模型采样得到的点云
    # 建议：调试时开启，了解模型点云分布
    
    show_coarse_alignment: true      # 显示粗配准结果
    # 作用：显示粗配准算法得到的初始对齐结果
    # 建议：调试时开启，查看粗配准质量
    
    show_correspondences: true       # 显示ICP对应点连线
    # 作用：显示ICP算法找到的点对连线
    # 建议：调试时开启，但会影响可视化性能
    
    show_bounding_boxes: true        # 显示边界框
    # 作用：显示各个点云和模型的包围盒
    # 建议：需要空间理解时开启
    
    show_center_points: true         # 显示中心点
    # 作用：显示各个几何体的中心点
    # 建议：调试时开启，了解几何中心位置
    
  # ============================================================================
  # 颜色配置 - 为不同元素设置不同颜色便于区分
  # 颜色格式：[R, G, B]，范围0-1
  # ============================================================================
  colors:
    original_scene: [0.0, 0.0, 1.0]      # 原始场景点云 - 蓝色
    # 蓝色便于识别原始数据
    
    preprocessed_scene: [0.0, 0.8, 0.8]  # 预处理场景点云 - 青色
    # 青色与蓝色区分，显示处理后的数据
    
    target_model: [0.0, 1.0, 0.0]        # 目标模型 - 绿色
    # 绿色表示目标/参考模型
    
    matched_model: [1.0, 0.0, 0.0]       # 匹配后模型 - 红色
    # 红色突出显示，这是最重要的结果
    
    model_pointcloud: [1.0, 1.0, 0.0]    # 模型点云 - 黄色
    # 黄色区分模型的点云表示
    
    coarse_alignment: [1.0, 0.5, 0.0]    # 粗配准结果 - 橙色
    # 橙色表示中间过程结果
    
    correspondences: [0.8, 0.8, 0.8]     # 对应点连线 - 灰色
    # 灰色不抢夺主要元素的注意力
    
    bounding_box: [0.5, 0.5, 0.5]        # 边界框 - 深灰色
    # 深灰色作为辅助信息
    
    center_point: [1.0, 0.0, 1.0]        # 中心点 - 紫色
    # 紫色显著但不过于突出

# ================================================================================
# 数据保存设置
# 作用：将运行中的数据保存到文件，用于后续分析或记录
# ================================================================================
data_saving:
  enable_saving: true          # 是否启用数据保存功能
  # 作用：总开关，控制是否保存任何数据
  # 注意：保存大量数据可能影响实时性能
  
  save_directory: "captured_data"  # 数据保存根目录
  # 作用：所有保存的数据将存储在此目录下
  # 自动创建子目录：pointclouds/, images/, poses/, results/
  
  save_interval: 10            # 保存间隔（帧数）
  # 作用：每处理N帧数据保存一次，避免保存过于频繁
  # 推荐值：5-20，根据存储需求和性能要求调整
  
  # 保存格式设置
  save_formats:
    pointcloud: ["ply", "pcd"] # 点云保存格式
    # 支持格式：ply, pcd, xyz等Open3D支持的格式
    # ply：通用格式，支持颜色；pcd：PCL格式
    
    image: ["png", "jpg"]      # 图像保存格式
    # png：无损压缩，质量高但文件大；jpg：有损压缩，文件小
    
    pose: ["txt", "json"]      # 姿态矩阵保存格式
    # txt：简单文本格式；json：结构化格式，包含额外信息
  
  # 保存内容选择
  save_items:
    original_pointcloud: true     # 保存原始点云
    # 是否保存从相机获取的原始点云数据
    
    preprocessed_pointcloud: true # 保存预处理后的点云
    # 是否保存经过预处理的点云数据
    
    rgb_image: true              # 保存RGB图像
    # 是否保存相机的RGB图像
    
    depth_image: true            # 保存深度图像
    # 是否保存深度图像（如果相机支持）
    
    pose_matrix: true            # 保存姿态变换矩阵
    # 是否保存估计得到的4x4变换矩阵
    
    matching_result: true        # 保存匹配结果统计信息
    # 是否保存fitness、RMSE等匹配质量指标

# ================================================================================
# 2D图像显示设置
# 作用：控制RGB和深度图像的实时显示窗口
# ================================================================================
image_display:
  enable_2d_display: true      # 是否启用2D图像显示窗口
  # 作用：总开关，控制是否显示OpenCV图像窗口
  # 注意：需要安装OpenCV库
  
  window_position: [100, 100]  # 2D窗口初始位置 [x, y]
  # 作用：设置图像窗口在屏幕上的初始位置（像素）
  
  window_size: [640, 480]      # 2D窗口大小 [宽度, 高度]
  # 作用：设置图像显示窗口的尺寸（像素）
  
  # 显示内容选择
  display_items:
    rgb_image: true            # 显示RGB图像窗口
    # 是否显示彩色/灰度图像窗口
    
    depth_image: true          # 显示深度图像窗口
    # 是否显示深度图像窗口（伪彩色显示）
    
    overlay_projection: false  # 显示3D投影叠加
    # 预留功能：在2D图像上叠加3D投影结果
    # 当前版本暂不支持

# ================================================================================
# 配置文件使用说明
# ================================================================================
# 1. 性能优化建议：
#    - 减少显示项目可提高性能
#    - 增大处理间隔可降低CPU占用
#    - 减少采样点数可加快处理速度
#
# 2. 精度优化建议：
#    - 增加模型采样点数
#    - 减小体素下采样尺寸
#    - 增加ICP迭代次数
#    - 减小ICP距离阈值
#
# 3. 调试建议：
#    - 开启所有显示项目观察处理过程
#    - 启用数据保存记录问题案例
#    - 调整颜色配置便于区分不同元素
#
# 4. 部署建议：
#    - 关闭不必要的显示项目
#    - 禁用数据保存（除非需要）
#    - 根据硬件性能调整处理参数
# ================================================================================ 